	CurrCTRL_SYS u0 (
		.clk_currctrl_sys_fifo_clk                   (<connected-to-clk_currctrl_sys_fifo_clk>),                   //           clk_currctrl_sys_fifo.clk
		.clk_currctrl_sys_ram_clk                    (<connected-to-clk_currctrl_sys_ram_clk>),                    //            clk_currctrl_sys_ram.clk
		.clk_pheripal_clk                            (<connected-to-clk_pheripal_clk>),                            //                    clk_pheripal.clk
		.cpu_clk_clk                                 (<connected-to-cpu_clk_clk>),                                 //                         cpu_clk.clk
		.cpu_reset_reset_n                           (<connected-to-cpu_reset_reset_n>),                           //                       cpu_reset.reset_n
		.currctrl_gpio_ext_in_port                   (<connected-to-currctrl_gpio_ext_in_port>),                   //               currctrl_gpio_ext.in_port
		.currctrl_gpio_ext_out_port                  (<connected-to-currctrl_gpio_ext_out_port>),                  //                                .out_port
		.currctrl_gpio_s1_address                    (<connected-to-currctrl_gpio_s1_address>),                    //                currctrl_gpio_s1.address
		.currctrl_gpio_s1_write_n                    (<connected-to-currctrl_gpio_s1_write_n>),                    //                                .write_n
		.currctrl_gpio_s1_writedata                  (<connected-to-currctrl_gpio_s1_writedata>),                  //                                .writedata
		.currctrl_gpio_s1_chipselect                 (<connected-to-currctrl_gpio_s1_chipselect>),                 //                                .chipselect
		.currctrl_gpio_s1_readdata                   (<connected-to-currctrl_gpio_s1_readdata>),                   //                                .readdata
		.currctrl_register_ram_s1_address            (<connected-to-currctrl_register_ram_s1_address>),            //        currctrl_register_ram_s1.address
		.currctrl_register_ram_s1_clken              (<connected-to-currctrl_register_ram_s1_clken>),              //                                .clken
		.currctrl_register_ram_s1_chipselect         (<connected-to-currctrl_register_ram_s1_chipselect>),         //                                .chipselect
		.currctrl_register_ram_s1_write              (<connected-to-currctrl_register_ram_s1_write>),              //                                .write
		.currctrl_register_ram_s1_readdata           (<connected-to-currctrl_register_ram_s1_readdata>),           //                                .readdata
		.currctrl_register_ram_s1_writedata          (<connected-to-currctrl_register_ram_s1_writedata>),          //                                .writedata
		.currctrl_register_ram_s1_byteenable         (<connected-to-currctrl_register_ram_s1_byteenable>),         //                                .byteenable
		.currctrl_register_ram_s2_address            (<connected-to-currctrl_register_ram_s2_address>),            //        currctrl_register_ram_s2.address
		.currctrl_register_ram_s2_chipselect         (<connected-to-currctrl_register_ram_s2_chipselect>),         //                                .chipselect
		.currctrl_register_ram_s2_clken              (<connected-to-currctrl_register_ram_s2_clken>),              //                                .clken
		.currctrl_register_ram_s2_write              (<connected-to-currctrl_register_ram_s2_write>),              //                                .write
		.currctrl_register_ram_s2_readdata           (<connected-to-currctrl_register_ram_s2_readdata>),           //                                .readdata
		.currctrl_register_ram_s2_writedata          (<connected-to-currctrl_register_ram_s2_writedata>),          //                                .writedata
		.currctrl_register_ram_s2_byteenable         (<connected-to-currctrl_register_ram_s2_byteenable>),         //                                .byteenable
		.currctrlsys_bridge_acknowledge              (<connected-to-currctrlsys_bridge_acknowledge>),              //              currctrlsys_bridge.acknowledge
		.currctrlsys_bridge_irq                      (<connected-to-currctrlsys_bridge_irq>),                      //                                .irq
		.currctrlsys_bridge_address                  (<connected-to-currctrlsys_bridge_address>),                  //                                .address
		.currctrlsys_bridge_bus_enable               (<connected-to-currctrlsys_bridge_bus_enable>),               //                                .bus_enable
		.currctrlsys_bridge_byte_enable              (<connected-to-currctrlsys_bridge_byte_enable>),              //                                .byte_enable
		.currctrlsys_bridge_rw                       (<connected-to-currctrlsys_bridge_rw>),                       //                                .rw
		.currctrlsys_bridge_write_data               (<connected-to-currctrlsys_bridge_write_data>),               //                                .write_data
		.currctrlsys_bridge_read_data                (<connected-to-currctrlsys_bridge_read_data>),                //                                .read_data
		.currctrlsys_bridge_avalon_slave_address     (<connected-to-currctrlsys_bridge_avalon_slave_address>),     // currctrlsys_bridge_avalon_slave.address
		.currctrlsys_bridge_avalon_slave_byteenable  (<connected-to-currctrlsys_bridge_avalon_slave_byteenable>),  //                                .byteenable
		.currctrlsys_bridge_avalon_slave_chipselect  (<connected-to-currctrlsys_bridge_avalon_slave_chipselect>),  //                                .chipselect
		.currctrlsys_bridge_avalon_slave_read        (<connected-to-currctrlsys_bridge_avalon_slave_read>),        //                                .read
		.currctrlsys_bridge_avalon_slave_write       (<connected-to-currctrlsys_bridge_avalon_slave_write>),       //                                .write
		.currctrlsys_bridge_avalon_slave_writedata   (<connected-to-currctrlsys_bridge_avalon_slave_writedata>),   //                                .writedata
		.currctrlsys_bridge_avalon_slave_readdata    (<connected-to-currctrlsys_bridge_avalon_slave_readdata>),    //                                .readdata
		.currctrlsys_bridge_avalon_slave_waitrequest (<connected-to-currctrlsys_bridge_avalon_slave_waitrequest>), //                                .waitrequest
		.currctrlsys_bridge_interrupt_irq            (<connected-to-currctrlsys_bridge_interrupt_irq>),            //    currctrlsys_bridge_interrupt.irq
		.reset_currctrl_sys_fifo_reset_n             (<connected-to-reset_currctrl_sys_fifo_reset_n>),             //         reset_currctrl_sys_fifo.reset_n
		.reset_currctrl_sys_ram_reset_n              (<connected-to-reset_currctrl_sys_ram_reset_n>),              //          reset_currctrl_sys_ram.reset_n
		.reset_pheripal_reset_n                      (<connected-to-reset_pheripal_reset_n>)                       //                  reset_pheripal.reset_n
	);

